Security Challenge
====
Render the below attacks ineffective in this application.

XSS:
```
http://localhost:3000/posts?utf8=%E2%9C%93&search=archive&status=foo=%22bar%22%3E%3Cscript%3Ealert%28%22p0wned!!!%22%29%3C/script%3E%3Cp%20data-foo
```

SQL Injection:

```
foo%'); INSERT INTO posts (id,title,body,created_at,updated_at) VALUES (99,'hacked','hacked alright','2013-07-18','2013-07-18'); SELECT "posts".* FROM "posts" WHERE (title like '%anything
```

_What I did_

* Update to Rails 4
    * Rails 3 was pretty unsecure
* Add `config/initializers/secret_token.rb` to `.gitignore`
* Add strong params
* Escape database queries
    * `.where("title like '%#{search}%'")` => `.where("title like ?", "#{search}"`
